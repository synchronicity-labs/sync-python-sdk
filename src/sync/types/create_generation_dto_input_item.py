# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic
from .provider_item import ProviderItem


class CreateGenerationDtoInputItem_Video(UniversalBaseModel):
    type: typing.Literal["video"] = "video"
    url: str
    segments_secs: typing.Optional[typing.List[typing.List[float]]] = None
    segments_frames: typing.Optional[typing.List[typing.List[float]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class CreateGenerationDtoInputItem_Audio(UniversalBaseModel):
    type: typing.Literal["audio"] = "audio"
    url: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class CreateGenerationDtoInputItem_Text(UniversalBaseModel):
    type: typing.Literal["text"] = "text"
    provider: ProviderItem

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


CreateGenerationDtoInputItem = typing.Union[
    CreateGenerationDtoInputItem_Video, CreateGenerationDtoInputItem_Audio, CreateGenerationDtoInputItem_Text
]
