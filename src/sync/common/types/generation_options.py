# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing
from .sync_mode import SyncMode
import pydantic
from .active_speaker import ActiveSpeaker
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class GenerationOptions(UncheckedBaseModel):
    sync_mode: typing.Optional[SyncMode] = pydantic.Field(default=None)
    """
    Defines how to handle duration mismatches between video and audio inputs. See the [Media Content Tips](/compatibility-and-tips/media-content-tips#sync-mode-options) guide for a brief overview,  or the SyncMode enum below for detailed explanations of each option.
    """

    temperature: typing.Optional[float] = pydantic.Field(default=None)
    """
    option to control how expressive lipsync can be. 0 -> least expressive, 1 -> most expressive. default:0.5
    """

    active_speaker_detection: typing.Optional[ActiveSpeaker] = pydantic.Field(default=None)
    """
    Active speaker detection configuration. When enabled, automatically detects and applies lipsync only to the active speaker in videos with multiple people.
    """

    occlusion_detection_enabled: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to detect occlusion during generation, slows down generation speed.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
