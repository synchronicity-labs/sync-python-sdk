# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
from .sync_mode import SyncMode
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class GenerationOptions(UniversalBaseModel):
    sync_mode: typing.Optional[SyncMode] = pydantic.Field(default=None)
    """
    lipsync mode when audio and video durations are out of sync. By default if the audio and video durations are out of sync and audio is longer than video, the video will loop. Otherwise, the video will be cut off at the end of the audio.
    """

    active_speaker: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether to detect active speaker and apply generation to them
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
