# This file was auto-generated by Fern from our API Definition.

from ...core.unchecked_base_model import UncheckedBaseModel
import typing_extensions
from ...core.serialization import FieldMetadata
import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class EstimatedGenerationCost(UncheckedBaseModel):
    estimated_frame_count: typing_extensions.Annotated[float, FieldMetadata(alias="estimatedFrameCount")] = (
        pydantic.Field()
    )
    """
    The estimated frame count for the generation.
    """

    estimated_generation_cost: typing_extensions.Annotated[float, FieldMetadata(alias="estimatedGenerationCost")] = (
        pydantic.Field()
    )
    """
    The estimated cost of the generation in USD.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
