# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .segment_secs import SegmentSecs
from .segment_frames import SegmentFrames
from ...core.pydantic_utilities import IS_PYDANTIC_V2


class Video(UniversalBaseModel):
    type: typing.Literal["video"] = "video"
    url: str = pydantic.Field()
    """
    URL of the video to be used for generation
    """

    segments_secs: typing.Optional[SegmentSecs] = pydantic.Field(default=None)
    """
    Start time and end time (in seconds) of the video segment to apply generation to. Configured as a list of lists, where each inner list contains the start time and end time of the segment. Currently only one segment is supported. ex: [[10.5, 20.5]] will lipsync only the segment between 10.5 and 20.5 seconds of the video.
    """

    segments_frames: typing.Optional[SegmentFrames] = pydantic.Field(default=None)
    """
    Start frame and end frame of the video segment to apply generation to. Configured as a list of lists, where each inner list contains the start frame and end frame of the segment. Currently only one segment is supported. ex: [[100, 200]] will lipsync only the segment between frames 100 and 200 of the video
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
