# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import pydantic
from .generation_error_message import GenerationErrorMessage
import typing_extensions
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class GenerationError(UniversalBaseModel):
    error: str = pydantic.Field()
    """
    The type of error that occurred.
    """

    message: GenerationErrorMessage = pydantic.Field()
    """
    A message describing the error.
    """

    status_code: typing_extensions.Annotated[float, FieldMetadata(alias="statusCode")] = pydantic.Field()
    """
    The type of error that occurred.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
